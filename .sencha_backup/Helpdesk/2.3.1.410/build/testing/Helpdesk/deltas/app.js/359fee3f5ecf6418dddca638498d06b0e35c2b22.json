["function _01a06715d06250d8ebea6af0959bf24f0877aadf(){};",20989,36,91,1048485,1048576,120481,"Menu}'s are used with {@link Ext.Viewport#setMenu}. A menu can be linked with any side of the screen (top, left, bottom or right)\n *  and will simply describe the contents of your menu. To use this menu you will call various menu related functions on the {@link Ext.Viewport}\n * such as {@link Ext.Viewport#showMenu}, {@link Ext.Viewport#hideMenu}, {@link Ext.Viewport#toggleMenu}, {@link Ext.Viewport#hideOtherMenus},\n * or {@link Ext.Viewport#hideAllMenus}.\n *\n *      @example preview\n *      var menu = Ext.create('Ext.Menu', {\n *",1080255,35,"{\n *                  text: 'Settings',\n *                  iconCls: 'settings'\n *",2162671,33,"{\n *                  text: 'New Item',\n *                  iconCls: 'compose'\n *",2162671,33,"{\n *                  text: 'Star',\n *                  iconCls: 'star'\n *",1067855,57,"Viewport.setMenu(menu, {\n *          side: 'left',\n *          reveal: true\n *      });\n *\n *      Ext.Viewport.showMenu('left",1258398,38,"a Menu item is a",1258448,48,"Menu",2127917,34,"xtype: 'menu",1167360,32,1169248,96,"Ext.baseCSSPrefix + 'menu'",836992,74,1012302,50,2130927,134,1233360,63,"eight",1302399,38,1230448,44,"width",1302399,38,1866496,45,1259520,47,"hide",1233216,36,"null,\n\n        /**",1012415,38,"hide",740270,42,2130762,67,"hide",1094251,59,"hide\n         */",989261,32,"/**",1012415,38,"hideOnMaskTap",1235312,33,"hide",738890,35,2344272,33,"null",2344319,62,"config.translatable",1921237,84,1007488,48,1260431,36,"Windows']",1235670,54,"context'",1170542,32,"pack: 'center'\n        }\n    }]",756048,50,1052159,37,"if (newUi != oldUi && ",2147597,39,"if (newUi == 'context'",1894347,38,"swapCls('x-vertical', 'x-horizontal'",1372176,38,"newUi == 'application'",1894347,38,"swapCls('x-horizontal', 'x-vertical",1880703,40,1029906,151,2389776,42,"hideMenu(this.$side",1051455,39,"},\n\n    /**\n     * Only fire the hide event if it is initialized",2261580,35,") {",1046223,50,2307599,33,"    }",1169033,643570,"Ext.define('Helpdesk.override.data.proxy.Rest', {\n    override: 'Ext.data.proxy.Rest',\n    ",1811675,50,"= this,\n            baseUrl = Helpdesk.app.baseUrl",1551618,40,"        \n        // Prefix the application's base URL (where the web services reside), \n        // rather than hard-coding the full URL on each store's proxy.\n        url = baseUrl + url;\n        ",1812520,280470,2092990,21042,"Ext.define('Helpdesk.override.field.Checkbox', {\n    override: 'Ext.field.Checkbox',\n    ",2109199,42,"// Always return a true or false value, rather than 'null' for unchecked",2111161,40,"    ",2114026,45724,"A date picker component which shows a Date Picker on the screen. This class extends from {@link Ext.picker.Picker}\n * and {@link Ext.Sheet} so it is a popup.\n *\n * This component has no required configurations",2125740,68,"datePicker = Ext.create('Ext.picker.Date');\n *     Ext.Viewport.add(datePicker);\n *     datePicker.show();\n *\n * You may want to adjust the {@link #yearFrom} and {@link #yearTo} properties",1076528,46,"var datePicker = Ext.create('Ext.picker.Date', {\n *         yearFrom: 2000,\n *         yearTo  : 2015",2126252,36,"datePicker);\n *     datePicker.show();\n *\n * You can set the value of the {@link Ext.picker.Date} to the current date using `new Date()`",1076528,46,"var datePicker = Ext.create('Ext.picker.Date', {\n *         value: new Date()",2126252,36,"datePicker);\n *     datePicker.show();\n *\n * And you can hide the titles from each of the slots by using the {@link #useTitle",1074828,46," preview\n *     var datePicker = Ext.create('Ext.picker.Date', {\n *         useTitles: false",2126252,36,"datePicker);\n *     dateP",2127870,41,"Date', {\n    extend: 'Ext.picker.Picker',\n    xtype: 'date",2127967,38,"DatePick",1167358,37,1992053,33,1295551,35,2128468,44,"and the done button is",2128536,36,"Date} this This Picker\n     * @param {Date} value The date valu",1865838,53,"{Number} yearFrom\n         * The start year for the date picker. If {@link #yearFrom} is greater than\n         * {@link #yearTo} then the order of years will be rever",1408304,46,"yearFrom: 198",939744,41,"[yearTo=new Date().getFullYear()]\n         * The last year for the date picker. If {@link #yearFrom} is greater than\n         * {@link #yearTo} then the order of years will be rever",1408304,46,"yearTo: new Date().getFullYear()",1081904,40,"monthText\n         * The label to show for the month colum",1082608,44,"monthText: 'Month",2116432,41,"dayText\n         * The label to show for the day colum",1082608,44,"dayText: 'Day",2116432,41,"yearText\n         * The label to show for the year colum",1082608,44,"yearText: 'Yea",2129007,34,"Array} slotOrder\n         * An array of strings that specifies the order of the slot",1219616,44,"slotOrder: ['month', 'day', 'year'",1333776,33,"Object/Date} value\n         * Default value for the field and the internal {@link Ext.picker.Date} component. Accepts an object of 'year',\n         * 'month' and 'day' values, all of which should be numbers, or a {@link Date}.\n         *\n         * Examples:\n         *\n         * - `{year: 1989, day: 1, month: 5}` = 1st May 1989\n         * - `new Date()` = current d",1182910,37,1332816,37,"slots",2145437,51,1325856,37,2129048,274,2132605,68,2132889,100,2133368,47,1894747,33,2120335,42,"delegate: '> slot',\n            slotpick: this.onSlotPick",2304165,44,"scope: this,\n            show: this.onSlotPick\n        });",1193122,32,"value, animated) {",1502706,46,"value = {\n                day  : value.getDate(),\n                month: value.getMonth() + 1,\n                year : value.getFullYear(",441103,36,"this.callParent([value, animated]);\n        this.onSlotPick",694046,35,2140703,121,"daysInMonth, day, month, year,",1048591,95," instanceof Ext.picker.Slot) {\n",2140975,76,"}\n        }\n\n        //if all the slots return null, we should not return a date\n        if (values.year === null && values.month === null && values.day",1804270,32,"null;\n        }\n\n        year = Ext.isNumber(values.year) ? values.year : 1;\n        month = Ext.isNumber(values.month) ? values.month : 1;\n        day = Ext.isNumber(values.day) ? values.day : 1;\n\n        if (month && year && month && day) {\n            daysInMonth = this.getDaysInMonth(month, year);\n        }\n        day = (daysInMonth) ? Math.min(day, daysInMonth): day;\n\n        return new Date(year, month - 1, day",1191983,38,"yearFrom",1191129,33,"YearFrom",987760,32,752831,32,"createSlots",1671424,38,"pdates the yearTo",1191129,33,"YearTo",987760,32,752831,32,"createSlots",1671424,38,"pdates the monthText",1191129,33,"MonthText: function(newMonthText, oldMonthText",1048893,47,2136679,50,"item, i;\n",2137220,36,"current items and set the title on the correct slice",1046223,45,211296,43,"i",2137046,34,"    if ((typeof item.title == \"string\" && item.title == oldMonthText) || (item.title.html == oldMonthText)) {\n                    item.setTitle(newMonthTex",2229055,46,1223840,43,"dayText",1191813,35,"DayText: function(newDayText, oldDayText",1048893,47,2136679,50,"item, i;\n",2137220,36,"current items and set the title on the correct slice",1046223,45,211296,43,"i",2137046,34,"    if ((typeof item.title == \"string\" && item.title == oldDayText) || (item.title.html == oldDayText)) {\n                    item.setTitle(newDayTex",2229055,46,1197376,35,"yearText",1191129,33,"YearText: function(yearText",1048893,47,2136679,50,"item, i;\n",2137220,36,"current items and set the title on the correct slice",1046223,45,211296,43,"i",2137046,34,"    if (item.title == this.yearText) {\n                    item.setTitle(yearTex",2229055,46,1173273,50,1165022,53,"createSlots()",1551215,36,"ll slots for all years specified by this component, and then sets them on the component",2262312,35,"Slots",1613216,37,"= this,\n            slotOrder = me.getSlotOrder(),\n            yearsFrom = me.getYearFrom(),\n            yearsTo   = me.getYearTo(),\n            years     = [],\n            days      = [],\n            months    = [],\n            reverse   = yearsFrom > yearsTo,\n            ln, i, daysInMonth;\n\n        while (yearsFrom) {\n            years.push({\n                text  : yearsFrom,\n                value : yearsFrom",1952384,34,"yearsFrom === yearsTo",1391195,41,"\n",857200,43,"yearsFrom--",261456,39,"yearsFrom",99199,37,"daysInMonth = me.getDaysInMonth(1, new Date().getFullYear());\n\n        for (i = 0; i < daysInMonth; i++) {\n            days.push({\n                text  : i + 1,\n                value : i +",845215,38,"for (i = 0, ln = Ext.Date.monthN",447295,40,"months.push({\n                text  : Ext.Date.monthNames[i],\n                value : i +",845215,38,"var slots = [];\n\n        slotOrder.forE",1011133,34,"slots.push(me.createSlot(item, days, months, years));\n        });\n\n        me.setSlots(slo",1047998,37," slot config for a specified date",2262311,36,"Slot: function(name, days, months, years) {\n",399662,36,"case 'year':\n    ",266223,37,"    name: 'year',\n                    align: 'center',\n                    data: years,\n                    title: this.getYearText(),\n                    flex: 3",1626909,32,"case 'month':\n    ",266223,37,85500,36,2135016,32,"    data: months,\n                    title: this.getMonthText(),\n                    flex: 4",1626909,32,"case 'day':\n    ",266223,37,"    name: 'day',\n                    align: 'center',\n                    data: days,\n                    title: this.getDayText(),\n                    flex: 2\n    ",114928,37,"onSlotPick",2112943,32," = this.getValue(true),\n            slot = this.getDaySlot(),\n            year = value.getFullYear(),\n            month = value.getMonth(),\n            days = [],\n            daysInMonth, i;\n\n        if (!value || !Ext.isDate(value) || !slot",2019167,43,1052159,37,"//get the new days of the month for this new date\n        daysInMonth = this.getDaysInMonth(month + 1, year);\n        for (i = 0; i < daysInMonth; i++) {\n            days.push({\n                text: i + 1,\n                value: i +",845215,38,"// We don't need to update the slot days unless it has changed\n        if (slot.getStore().getCount() == days.length",2019167,43,"slot.getStore().setData(days);\n\n        // Now we have the correct amount of days for the day slot, lets update it\n        var store = slot",2124579,37,"slot",2124620,42,"slot",2124666,70,"(valueField, value.getDate());",2124762,40,"return",2124811,64,"slot",2122272,32,"slot.scrollToItem(item);\n        slot.setValue(slot.getValue(true));\n    },\n\n    getDaySlot",2274252,60,2136679,50,"i, slot;\n\n        if (this.daySlot) {\n            return this.daySlot",1444047,38,"n; i++) {\n            slot = innerItems[i];\n            if (slot.isSlot && slot.getName() == \"day\") {\n                this.daySlot = slot;\n                return slot",1365472,42,"null",2150617,33,"DaysInMonth: function(month, year",623269,80,"        return month == 2 && this.isLeapYear(year) ? 29 : daysInMonth[month-1];\n    },\n\n    // @private\n    isLeapYear: function(year) {",620485,32,620516,36,"= 0 && year)));\n    },\n",2138173,113,",\n            testValue = newValue;\n\n        if (Ext.isDate(newValue)) {\n            testValue = newValue.toDateString()",1502695,35,"oldValue)) {\n            oldValue = oldValue.toDateString();\n        }\n\n        if (test",2138304,159,1204350,38,"This is a specialized field which shows a {@link Ext.picker.Date} when tapped. If it has a predefined value,\n * or a value is selected in the {@link Ext.picker.Date}, it will be displayed like a normal {@link Ext.field.Text}\n * (but not selectable/changable).",1215837,33,"DatePicker', {\n *         label: 'Birthday',\n *         value: new Date()\n *     });\n *\n * {@link Ext.field.DatePicker} fields are very simple to implement, and have no required configurations.\n *\n * ## Examples\n *\n * It can be very useful to set a default {@link #value} configuration on {@link Ext.field.DatePicker} fields. In\n * this example, we set the {@link #value} to be the current date.",1077195,32,"tValue} method to\n * update the value at any time.",2103631,45,2141577,154,1215276,69,"datepicker",2162560,35,"label: 'Birthday",2160592,37,"birthday',\n *                         value: new Date()",2160638,63,1174384,46,721920,38,2104217,140,"setValue",1175102,87,"datePickerField = Ext.ComponentQuery.query('datepickerfield')",1515232,35,"    var randomNumber = function(from, to",1078879,35,"    return ",1171771,50,";",1176160,32,"}",1176156,36,"datePickerField.setValue(",1175152,33,"    month: randomNumber(0, 11)",1427824,37,"day  : randomNumber(0, 28)",1427824,37,"year : randomNumber(1980, 2011)",1176160,32,"}",1174976,82,1080704,86," When you need to retrieve the date from the {@link Ext.field.DatePicker}, you can either use the {@link #getValue} or\n * {@link #getFormattedValue} methods",2005488,40,2141581,150,1215276,69,"datepicker",2162560,35,"label: 'Birthday",2160592,37,"birthday',\n *                         value: new Date()",2160638,63,1174384,46,721920,38,"bottom",1229055,83,"text: 'getValue",1175102,87,"datePickerField = Ext.ComponentQuery.query('datepickerfield')[0];",1176160,32,"Ext.Msg.alert(null, datePickerField.getValue()",1174976,82,1079596,44,2104322,38,"FormattedValue",1175102,87,"datePickerField = Ext.ComponentQuery.query('datepickerfield')[0];",1176160,32,"Ext.Msg.alert(null, datePickerField.getFormattedValue()",1174976,56,1215663,68,"\n */\nExt.define('Ext.field.DatePicker', {\n    extend: 'Ext.field.Select",2302752,32,"form.DatePicker',\n    xtype: 'datepicker",1205885,49,1325808,39,2128432,36,"s when a date",1865109,32,"field.DatePicker} this\n     * @param {Date} newDate The new date\n     * @param {Date} oldDate The old dat",1865838,33,"ui: 'selec",2116144,34,"Object/Ext.picker.Date} picker\n         * An object that is used when creating the internal {@link Ext.picker.Date} component or a direct instance of {@link Ext.picker.Date",1208432,44,"pick",1336575,40,"Boolean}",2145437,107,"Object/Date} value\n         * Default value for the field and the internal {@link Ext.picker.Date} component. Accepts an object of 'year',\n         * 'month' and 'day' values, all of which should be numbers, or a {@link Date}",1470059,32," {year: 1989, day: 1, month: 5} = 1st May 1989 or new Date()",841200,43,1816848,33,"troyPickerOnHide\n         * Whether or not to destroy the picker widget on hide. This save memory if it's not used frequently,\n         * but increase delay time on the next show due to re-instantia",1408926,47,"destroyPickerOnHi",1469792,41,"String} [dateFormat=",644285,33,"] The format to be used when displaying the date in this field.\n         * Accepts any valid date format. You can view formats over in the {@link Ext.Date} documentation",1520935,70,"Object}",1012415,38,2145339,48,2303948,46,2107488,143,2107660,34,2107693,53,2253312,32,2147327,63,2149323,44,1192812,38,"if (!Ext.isDate(value) && !",85156,35,303312,32,85152,39,"return new Date(value.year, value.month - 1, value.day",922397,34,2150048,66,1669297,32,"icker = me._picker;\n\n        if (picker && picker.isPicker) {\n            picker",1222038,40,"// Ext.Date.format expects a Date\n        if (newValue !== null) {\n            me.getComponent().setValue(Ext.Date.format(newValue, me.getDateFormat()",644281,38,676208,35,"getComponent().setValue('');\n        }\n\n        if (newV",545759,33,"me.fireEvent('change', me, newV",546794,39,"/**\n     * Updates the date format in the field",1191472,36,"DateFormat: function(newDateFormat, oldDateFormat) {\n",888620,45,"if (newDateFormat != oldDateFormat && ",1502719,33,"this.getComponent().setValue(Ext.Date.format(value, newDateF",644276,43,764496,48,"{@link Date} value of this field.\n     * If you wanted a formatted date use the {@link #getFormattedValue} method.\n     * @return {Date} The date selected",2140671,32,") {\n        if (this._picker && this._picker instanceof Ext.picker.Date) {\n            return this._picker.getValu",769984,36,"_val",1414512,39,"value of the field formatted using the specified format. If it is not specified, it will default to\n     * {@link #dateFormat} and then {@link Ext.util.Format#defaultDateFormat}",614989,43,"to be",461856,39,"formatted date.\n     */\n    getFormattedValue",599660,33,888632,33,"return (Ext.isDate(value)) ?",644251,34,"this.getDateFormat()",644281,38," : value;\n    },\n\n    applyPicker: function(picker, pickerInstance) {\n        if (pickerInstance && pickerInstance.isPicker) {\n            picker = pickerInstance.setConfig(picker);\n        }\n\n        return picker;\n    },\n\n    get",2150655,33,"picker = this._picke",2121372,38,";\n\n        if (picker && !picker.isPicker) {\n            picker = Ext.factory(picker, Ext.picker.Date);\n            if (value != null) {\n                picker.setValue",2042416,33,"\n        picker",2120334,43,"change: 'onPickerChange',\n            hide  : 'onPickerHide'\n        });\n\n        this._picker = picker;\n\n        return picker",951440,41,"Listener to the tap event of the mask element. Shows the internal DatePicker component when th",2138140,40,"MaskTap",987760,32,1092957,67,"onFocus(",293309,32,2157239,33,"picker changes its value.\n     * @param {Ext.picker.Date} picker The date p",2128591,40,"new value from the date pick",1191470,32,2154476,77,"oldValue = me.getValue();\n\n        me.setValue(value);\n        me.fireEvent('select', me, value);\n        me.onChange(me, value",2155216,36,"Override this or change event will be fired twice. change event is fired in updateValue\n     * for this field. TOUCH-2861\n     */\n    onChang",752027,32,"Destroys the picker when it is hidden, if\n     * {@link Ext.field.DatePicker#destroyPickerOnHide destroyPickerOnHide} is set to `tru",2214748,32,"onPickerHide",1613216,34,"= this,\n            picker = me.getPicker();\n\n        if (me.getDestroyPickerOnHide() && picker) {\n            picker.destroy();\n            me._picker = me.getInitialConfig().picker || true;\n        }",693551,46,1199084,42,"on",1201087,33,1223536,41,1226392,34,2159302,131,"if (this.getReadOnly",1198848,51,2159433,37,"getPicker().sho",2286189,33,302032,34,"picker = this._picker;\n\n        if (picker && picker.isPicker) {\n            pick",972939,33,2324496,33,1204350,38,"The Email field creates an HTML5 email",2159812,65,"n HTML email\n * input field, most browsers will show a specialized virtual keyboard for email address input. Aside from that, the\n * email field is just a normal text",2160009,789,"Email', {\n *         label: 'Email address',\n *         value: 'prefilled@email.com'\n *     });\n *\n * Because email",1217022,38,2160953,59," fields\n *",2161022,110," the\n *",2161139,154,"Email",1230255,39,"alternateClassName: 'Ext.form.Email',\n    xtype: 'emailfield",1606480,45,1230448,44,"component: {\n\t        type: 'email'\n\t",167728,32,1183456,47,"autoCapitalize: false\n    }\n});\n\n\n\n",2141472,35,2159775,203923,"controller/Navigation",2367248,511,"controller.Navigation",2371930,58,"}",2371359,949,",\n            \"button[action=ShowUserAdm",2372164,32,"UserAdmin",2377936,44,2372334,234,",\n            model = Ext.create('Helpdesk.model.Login', values);\n\n        if (model.isValid()) {\n",2373712,35,2212220,62,"'Logging In",2379591,34,2200789,40,2389663,38,"login',\n    ",2372775,42,2389727,39,2372848,32,2372876,43,2379694,88,"response){\n    ",2373006,89,2389977,51,2373138,36,2373170,35,2379984,65,2373258,82,"    }",2212285,46,"Ext.Msg.alert(\"Invalid Details\", \"Please enter both an email and password to login.\");\n        }",2373353,76,",\n            loginForm = me.getLoginForm();\n\n        Ext.Viewport.hideMenu('right');\n\n        loginForm.reset(",2389372,92,2373520,463,"onUserAdm",2372336,44,"Ext.Viewport.hideMenu('right'",2373968,3676,",\n            ticketForm: 'ticketform",2377643,311,",\n            \"formpanel\": {\n                initialize: 'onTicketFormInitialize'",1162400,39,2377979,108,",\n            disabled = record.get('Closed'",2378086,133,",\n            disabled: disable",2378218,887,"onTicketFormInitialize: function(component, eOpts) {\n        if (component.isDisabled()) {\n            var buttons = component.query('button')",604072,35,"button",2380421,34,"buttons[i]",865263,37,2379097,1585,2365275,897,2366203,90,"Login",2367248,511,"model.Login",2364233,76,"\n      \n\n    config: {",2365965,56,"EmailAddress",2370684,47,"name: 'Password",2365072,35,"validation",1169840,35,"type: 'presence',\n                field: 'EmailAddress",2370684,47,"type: 'presence',\n                field: 'Password",2384372,32,"});",2363680,1480,2365191,90,"User",2367248,511,2366808,313,2367152,82,2380682,620,1325728,35,2381309,82,",\n        grouper: {\n            g",1702607,33,"        if (item.get('Closed')",890240,33,"return 'Closed'",631152,54,"'Open",407888,34,",\n",925213,35,2366255,32,2381419,732,2369052,592,"companyform",2369656,51,2367239,672,"\n       ",2370409,121,2385934,72,"10\n",1240175,35,2368123,95,"email",2368400,40,"Email",2368448,34,"EmailAddress',\n                        placeHolder: 'email@example.com",1172368,79,2368392,660,2369707,723,2367935,78,2370530,104,"companyform",2370646,53,2371017,65,2384397,40,2382157,719,2367913,53,2382907,58,"grouped: true",2382955,53,",\n            '<div class=\"listDates\">',\n            '    <div>Created on {DateCreated:date(\\'d/m/Y\\')}</div>',\n            '    <tpl if=\"Closed == true\">',\n            '        <div>Closed on {DateClosed:date(\\'d/m/Y\\')}</div>',\n            '    </tpl",2284649,34,2383018,274,1172362,118,"iconCls: 'fa-plus",2368914,34,"New Ticket",1921680,40,"]",2384373,58,"MainView",2367248,516,2384051,158," \n       ",2370409,78,2384244,153,2269484,39,"docked: 'top',\n",2368143,37,"{\n",1171291,57,2135016,32,"    itemId: 'mybutton6',\n",2368874,33,"bars",1210432,43,2371082,68,"6",2371151,72,"6",2371224,48,"6",2373374,42,"Ext.Viewport.toggleMenu('right');",2384397,806,2310368,61,2367935,78,1172112,35,"bottom",2386859,82,1170832,33,2385437,2611,2364464,32,2385926,80,"40\n",1240175,35,"title: 'Statu",2387818,83,"datepicker",2368400,40,"Date Create",2368447,35,"DateCreated',\n                        readOnly: true",1240170,44,1171285,34,"checkbox",2368400,40,"Close",2368447,35,"Closed",1172368,79,"datepicker",2368400,40,"Date Close",2368447,35,"DateClosed',\n                        readOnly: true",72000,39,"]",2384373,52,2367248,490,2388576,210," \n",2388768,57,"20/ITHelpdesk/",2388838,85,",\n        'Login",2388922,264,",\n        'Navigation",2389185,89,"document.addEventListener(\"resume\", me.resume)",2389263,62,2389375,124,"typeof StatusBar",2245005,32,2389528,65,"HexString('#F8F9F9",2389604,83,2389688,489,"\n       ",644284,34," = 'd/m/Y';\n\n        var menu = Ext.create('Ext.Menu', {\n",2368143,37,"{\n                    text: 'User Admin',\n                    action: 'ShowUserAdmin',\n",2368874,33,"users'\n",1240175,35,"{\n",2383395,34,",\n",2383305,58,"iconCls: 'fa-sign-out",1210432,42," });\n\n         Ext.Viewport.setMenu(menu, {\n             side: 'right'\n ",2390165,116,"// TODO: Demonstrate something happening when the app resumes from background",2390272,177,"/override/data/proxy/Rest.js",2390379,70,"/override/field/Checkbox.js",2390379,75]
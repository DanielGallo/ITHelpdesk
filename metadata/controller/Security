{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Security"
    },
    "designerId": "21bd4d7a-7622-4d44-8ea7-14781663bed1",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[action=Login]",
                "designer|targetType": "Ext.Button",
                "fn": "onLoginTap",
                "implHandler": [
                    "var me = this,",
                    "    mainView = this.getMainView(),",
                    "    mainCard = this.getMainCard(),",
                    "    loginForm = this.getLoginForm(),",
                    "    values = loginForm.getValues(),",
                    "    model = Ext.create('Helpdesk.model.Login', values);",
                    "",
                    "if (model.isValid()) {",
                    "    Ext.Viewport.setMasked({",
                    "        xtype: 'loadmask',",
                    "        message: 'Logging In...'",
                    "    });",
                    "",
                    "    Ext.Ajax.request({",
                    "        url: Helpdesk.app.baseUrl + '/api/security/login',",
                    "        jsonData: values,",
                    "        withCredentials: true,",
                    "        method: 'POST',",
                    "        callback: function() {",
                    "            Ext.Viewport.setMasked(false);",
                    "        },",
                    "        success: function(response){",
                    "            var userId = Ext.Number.from(response.responseText, 0);",
                    "",
                    "            Helpdesk.app.userId = userId;",
                    "",
                    "            me.setupPush();",
                    "            me.loginSuccess();",
                    "        },",
                    "        failure: function() {",
                    "            Ext.Msg.alert(\"Login Failure\", \"Your login details were incorrect.\");",
                    "        }",
                    "    });",
                    "} else {",
                    "    Ext.Msg.alert(\"Invalid Details\", \"Please enter both an email and password to login.\");",
                    "}"
                ],
                "name": "tap"
            },
            "name": "onLoginTap",
            "designerId": "4f56bc5f-becd-4a2c-9c82-f3bec5abb860"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[action=Logout]",
                "designer|targetType": "Ext.Button",
                "fn": "onLogoutTap",
                "implHandler": [
                    "var me = this,",
                    "    loginForm = me.getLoginForm();",
                    "",
                    "Ext.Viewport.hideMenu('right');",
                    "",
                    "loginForm.reset();",
                    "",
                    "Ext.Viewport.setMasked({",
                    "    xtype: 'loadmask',",
                    "    message: 'Logging out...'",
                    "});",
                    "",
                    "Ext.Ajax.request({",
                    "    url: Helpdesk.app.baseUrl + '/api/security/Logout',",
                    "    withCredentials: true,",
                    "    callback: function() {",
                    "        Ext.Viewport.setMasked(false);",
                    "    },",
                    "    success: function(response){",
                    "        Helpdesk.app.userId = null;",
                    "",
                    "        Ext.Viewport.setActiveItem(0);",
                    "        Ext.Viewport.removeAt(1);",
                    "    }",
                    "});"
                ],
                "name": "tap"
            },
            "name": "onLogoutTap",
            "designerId": "89ce1536-f6fd-45cf-856a-959b9edaef81"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[action=ShowUserAdmin]",
                "designer|targetType": "Ext.Button",
                "fn": "onUserAdminTap",
                "implHandler": [
                    "Ext.Viewport.hideMenu('right');"
                ],
                "name": "tap"
            },
            "name": "onUserAdminTap",
            "designerId": "e5bb04d6-672f-42f5-8aee-3dc797779957"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainView",
                "selector": "mainview"
            },
            "name": "mainView",
            "designerId": "20367d95-a2ce-4e62-8a6d-9c0386d199c1"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainCard",
                "selector": "maincard"
            },
            "name": "mainCard",
            "designerId": "af2c52cd-889b-4f66-9fd1-b31c8c774dea"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "loginForm",
                "selector": "loginform"
            },
            "name": "loginForm",
            "designerId": "9a4b08d2-b08b-4cb0-9d1c-2e5d0ca751e7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setupPush",
                "implHandler": [
                    "if (Ext.os.is.iOS) {",
                    "    window.pushNotification = window.plugins.pushNotification;",
                    "",
                    "    window.pushNotification.register(function(token) {",
                    "        // Successfully registered device.",
                    "",
                    "        // TODO: Get device name from the user - a friendly name for the device",
                    "",
                    "        var device = Ext.create('Helpdesk.model.Device', {",
                    "            Name: 'test device',",
                    "            Token: token,",
                    "            UserID: Helpdesk.app.userId",
                    "        });",
                    "",
                    "        device.setId(0);",
                    "",
                    "        device.save();",
                    "",
                    "        console.log('Setup successful');",
                    "        console.log(token);",
                    "    }, function(error) {",
                    "        // Error setting up push notifications",
                    "        Ext.Msg.alert('Error', error);",
                    "        console.log('Setup unsuccessful');",
                    "        console.log(error);",
                    "    }, {",
                    "        alert : 'true',",
                    "        badge : 'true',",
                    "        sound : 'true',",
                    "        ecb   : 'onNotificationAPN'",
                    "    });",
                    "",
                    "    window.onNotificationAPN = function(event) {",
                    "",
                    "        console.log('Received notification');",
                    "        console.log(event);",
                    "",
                    "        navigator.notification.vibrate();",
                    "",
                    "        if(event.alert) {",
                    "            //Ext.Msg.alert('Alert', event.alert);",
                    "",
                    "            Ext.device.Notification.show({",
                    "                title: 'New record',",
                    "                message: 'A new record has been added, would you like to view it?',",
                    "                buttons: Ext.MessageBox.OKCANCEL,",
                    "                callback: function(button) {",
                    "                    if (button === \"ok\") {",
                    "                        console.log('Yes');",
                    "                    } else {",
                    "                        console.log('No');",
                    "                    }",
                    "                }",
                    "            });",
                    "        }",
                    "",
                    "        if(event.sound) {",
                    "            console.log('Play sound');",
                    "            var snd = new Media('resources/short_double_low.mp3');",
                    "            snd.play();",
                    "        }",
                    "",
                    "        if(event.badge) {",
                    "            console.log('Update badge');",
                    "            console.log(event.badge);",
                    "            window.pushNotification.setApplicationIconBadgeNumber(function() {",
                    "                // Success.",
                    "            }, function() {",
                    "                // Failure.",
                    "            }, Ext.Number.from(event.badge, 0));",
                    "        }",
                    "    };",
                    "}"
                ]
            },
            "name": "setupPush",
            "designerId": "e8058af7-2fe5-4e78-ac6f-fe142263f6d3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "removePush",
                "implHandler": [
                    "if (Ext.os.is.iOS) {",
                    "    window.pushNotification.unregister();",
                    "}"
                ]
            },
            "name": "removePush",
            "designerId": "01cfd637-4f6a-4ea5-bb5c-6c9f00129c99"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loginSuccess",
                "implHandler": [
                    "var mainView = Ext.create('Helpdesk.view.MainView', {});",
                    "",
                    "Ext.getStore('Tickets').load();",
                    "Ext.getStore('Users').load();",
                    "",
                    "Ext.Viewport.add(mainView);",
                    "Ext.Viewport.setActiveItem(1);"
                ]
            },
            "name": "loginSuccess",
            "designerId": "4dc55120-a2ba-4193-9cfe-252573ee24e5"
        }
    ]
}